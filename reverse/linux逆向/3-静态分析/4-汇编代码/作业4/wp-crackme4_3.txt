wp-crackme4_3


gdb载入后向下分析，大概就是输出提示信息，要求用户输入，我们向下来到test函数的call这里。

   0x80484f5 <main+93>:	mov    eax,DWORD PTR [ebp-0x8]
   0x80484f8 <main+96>:	imul   eax,DWORD PTR [ebp-0x8]
   0x80484fc <main+100>:	mov    DWORD PTR [ebp-0xc],eax
=> 0x80484ff <main+103>:	mov    eax,DWORD PTR [ebp-0xc]
   0x8048502 <main+106>:	mov    DWORD PTR [esp+0x4],eax
   0x8048506 <main+110>:	mov    eax,DWORD PTR [ebp-0x4]
   0x8048509 <main+113>:	mov    DWORD PTR [esp],eax
   0x804850c <main+116>:	call   0x804846e <test>

我们可以看到test压入了两个参数，我们单步，发现一个是我们的用户输入，一个是0x52b24（338724）。我们就进入test函数看看实现了什么处理

在test函数里我们可以看到如下汇编代码


   0x8048477 <test+9>:	cmp    eax,DWORD PTR [ebp+0xc]
=> 0x804847a <test+12>:	je     0x804848a <test+28>
 | 0x804847c <test+14>:	mov    DWORD PTR [esp],0x80485ec
 | 0x8048483 <test+21>:	call   0x8048414 <shift>
 | 0x8048488 <test+26>:	jmp    0x8048496 <test+40>
 | 0x804848a <test+28>:	mov    DWORD PTR [esp],0x80485fe
 |->   0x804848a <test+28>:	mov    DWORD PTR [esp],0x80485fe
       0x8048491 <test+35>:	call   0x8048414 <shift>
       0x8048496 <test+40>:	leave
       0x8048497 <test+41>:	ret

就很简单一个cmp然后jmp，然后在shift函数处输出password正确或错误的提示信息。然后函数就返回了。


那么可以很简单的知道password就是0x52b24（338724）


